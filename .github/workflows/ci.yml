name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore CloakId.sln
    
    - name: Build solution
      run: dotnet build CloakId.sln --no-restore --configuration Release
    
    - name: Run tests with coverage
      run: dotnet test CloakId.sln --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults
    
    - name: Prepare coverage reports
      run: |
        # Find the coverage file and copy it to a standard location
        find ./TestResults -name "coverage.cobertura.xml" -exec cp {} ./TestResults/coverage.xml \;
        ls -la ./TestResults/
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      with:
        files: ./TestResults/coverage.xml,./TestResults/**/coverage.cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
        # Tokenless upload for public repositories
        use_oidc: true
    
    - name: Pack NuGet packages
      run: |
        dotnet pack src/CloakId/CloakId.csproj --no-build --configuration Release --output ./packages
        dotnet pack src/CloakId.AspNetCore/CloakId.AspNetCore.csproj --no-build --configuration Release --output ./packages
        dotnet pack src/CloakId.Sqids/CloakId.Sqids.csproj --no-build --configuration Release --output ./packages
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./packages/*.nupkg
        retention-days: 30

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore CloakId.sln
    
    - name: Check format
      run: dotnet format CloakId.sln --verify-no-changes --verbosity diagnostic
